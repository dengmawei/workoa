<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.2.xsd
        http://www.springframework.org/schema/tx
       	http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
       	http://www.springframework.org/schema/aop
       	http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
       	http://www.springframework.org/schema/security  
		http://www.springframework.org/schema/security/spring-security-3.2.xsd">
		
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">         
        <property name="locations">
        	<list>
        		<value>classpath:jdbc.properties</value>
        		<value>classpath:mongodb.properties</value>
        	</list>
        </property>
    </bean>
	
    <!-- 数据源配置 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">       
	    <property name="driverClassName" value="${jdbc.driver}"/>       
	    <property name="url" value="${jdbc.url}"/>       
	    <property name="username" value="${jdbc.username}"/>       
	    <property name="password" value="${jdbc.password}"/>       
	</bean>
	
	<bean id="mongoDBManager" class="org.common.util.MongoDbManager" destroy-method="close">
		<constructor-arg name="host" value="${mongodb.ip}"></constructor-arg>
		<constructor-arg name="port" value="${mongodb.port}"></constructor-arg>
		<property name="userPicDb" value="${mongodb.userPicDb}"></property>
	</bean>
	
    <!-- MyBatis配置 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- 自动扫描entity目录, 省掉Configuration.xml里的手工配置 -->
		<property name="typeAliasesPackage" value="org.common.entity" />
		<!-- 显式指定Mapper文件位置 -->
		<property name="mapperLocations" value="classpath:/myibatis/*/*Mapper.xml" />
	</bean>
	
	<!-- 扫描basePackage下所有以@MyBatisRepository标识的 接口-->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="org.common.dao" />
		<property name="annotationClass" value="org.common.dao.MyBatisRepository"></property>
	</bean>
    
    <!-- 加载service中的bean -->
    <context:component-scan base-package="org.common.service" />
    
    <!-- 事务管理 -->
    <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">     
   		<property name="dataSource" ref="dataSource"></property>     
 	</bean>
 	
 	<!-- 声明式事务变成-注解 -->
	<tx:annotation-driven transaction-manager="txManager" proxy-target-class="true"/>
	
 	<!-- 声明式事务-配置文件 -->
 	<!-- <tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
        	<tx:method name="save*" propagation="REQUIRED" />
           	<tx:method name="add*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
           	<tx:method name="create*" propagation="REQUIRED" />
           	<tx:method name="insert*" propagation="REQUIRED" />
           	<tx:method name="update*" propagation="REQUIRED" />
           	<tx:method name="merge*" propagation="REQUIRED" />
           	<tx:method name="del*" propagation="REQUIRED" />
           	<tx:method name="remove*" propagation="REQUIRED" />
           	<tx:method name="put*" propagation="REQUIRED" />
           	<tx:method name="get*" propagation="SUPPORTS" read-only="true" />
           	<tx:method name="count*" propagation="SUPPORTS" read-only="true" />
          	<tx:method name="find*" propagation="SUPPORTS" read-only="true" />
          	<tx:method name="list*" propagation="SUPPORTS" read-only="true" />
          	<tx:method name="*" propagation="SUPPORTS" read-only="true" />
       	</tx:attributes>
	</tx:advice>
	<aop:config>
		<aop:pointcut id="txPointcut" expression="execution(* com.org.workoa.service.*.*(..))" />
	    <aop:advisor advice-ref="txAdvice" pointcut-ref="txPointcut" />
	</aop:config>
	
	<bean id="logAspect" class="com.org.workoa.common.LogRecordUtil"></bean>
	
	<aop:config>
		<aop:pointcut id="txPointcut" expression="execution(* com.org.workoa.service.*.*(..))" />
	    <aop:aspect ref="logAspect">
			<aop:before method="befordAspect" pointcut-ref="txPointcut"/>
			<aop:after method="afterAspect" pointcut-ref="txPointcut"/>
		</aop:aspect>
	</aop:config> -->
	
	<import resource="applicationContext.xml"/>
</beans>